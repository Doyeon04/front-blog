{"ast":null,"code":"var _jsxFileName = \"/Users/yunsmac/Desktop/blog/src/component/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Header from \"./header/Header\";\nimport styles from \"./PostDetail.module.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Content from \"./content/Content\";\nimport { token } from \"./Api\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CommentInput = styled.input`\n  width: 80%;\n  height: 50px;\n`;\n_c = CommentInput;\nconst CommentContainer = styled.div`\n  height: 800px;\n  background-color: antiquewhite;\n  padding: 50px;\n`;\n_c2 = CommentContainer;\nconst CommentBox = styled.div`\n  display: flex;\n`;\n_c3 = CommentBox;\nconst CommentBtn = styled.button`\n  width: 50px;\n  height: 40px;\n  margin-left: 40px;\n`;\n_c4 = CommentBtn;\nconst CommentsUl = styled.ul`\n  margin: 30px 0px;\n`;\n_c5 = CommentsUl;\nconst CommentsLi = styled.li`\n  width: 100%;\n  padding: 20px;\n  list-style: none;\n  border-bottom: 1px solid gray;\n`;\n_c6 = CommentsLi;\nconst OneComment = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n_c7 = OneComment;\n\nfunction PostDetail(props) {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [childReply, setChildReply] = useState(false);\n  const [clickChildReplyIndex, setClickChildReply] = useState();\n  console.log(\"postId:\", postId); //const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxIiwiaXNzIjoiYmxvZyBwcm9qZWN0IiwiaWF0IjoxNjQ0MDQyNDcwLCJleHAiOjE2NTI2ODI0NzB9.NCoq6o8qLnWoBqw6ob3gOhVDR87ZGgruPiGeWEhyfOugC3ZNjCFFcF-Dn7xUInFYfNv8XY-yKznCQWqj8qX1rw\";\n\n  const ReplyBtn = styled.button`\n    width: 70px;\n    height: 50px;\n  `;\n\n  const getResponse = () => {\n    var axios = require(\"axios\");\n\n    var data = JSON.stringify({});\n    var config = {\n      method: \"get\",\n      url: `http://localhost:8080/api/posts/${postId}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      console.log(\"getResponse에서 받아옴:\", response.data.replyResponseList); // 이게 comments임\n\n      let result = response.data.replyResponseList;\n      setComments(result);\n      setTitle(response.data.title);\n      setContent(response.data.content);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const onDelete = event => {\n    event.preventDefault(); //원래 페이지로 돌아가기 */\n\n    var axios = require(\"axios\");\n\n    var data = JSON.stringify(\"string\");\n    var config = {\n      method: \"delete\",\n      url: `http://localhost:8080/api/posts/${postId}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      console.log(JSON.stringify(response.data));\n      navigate(\"/\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [comments, setComments] = useState([]);\n  const textRef = useRef();\n  useEffect(() => {\n    getResponse();\n  }, []);\n\n  const replySubmit = () => {\n    let text = textRef.current.value;\n    textRef.current.value = \"\";\n\n    var axios = require(\"axios\");\n\n    var data = JSON.stringify({\n      content: text,\n      parentReplyId: 0,\n      postId: postId\n    });\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:8080/api/reply\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      console.log(response.data.replyResponseList);\n      setComments(response.data.replyResponseList);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const createChildReply = replyId => {\n    setChildReply(current => !current);\n    setClickChildReply(replyId); //getResponse();\n\n    console.log(\"클릭한 +버튼\", replyId);\n  };\n\n  const [childReplyTyping, setChildReplyType] = useState();\n  /* const postChildReply = (e) => {\n    setChildReplyType(e.target.value);\n  }; */\n\n  const childReplySubmit = e => {\n    // 자식 댓글 달기\n    e.preventDefault();\n    console.log(\"자식 댓글 담\");\n\n    var axios = require(\"axios\");\n\n    var data = JSON.stringify({\n      content: childReplyTyping,\n      parentReplyId: clickChildReplyIndex,\n      postId: postId\n    });\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:8080/api/reply\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      setComments(response.data.replyResponseList);\n      getResponse();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const deleteChildReply = replyId => {\n    console.log(\"삭제 버튼\", replyId);\n\n    var axios = require(\"axios\");\n\n    var data = JSON.stringify({});\n    var config = {\n      method: \"delete\",\n      url: `http://localhost:8080/api/reply/${replyId}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      getResponse();\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postTitle,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postContent,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.BtnContainer,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/modify\",\n          state: {\n            title: title,\n            content: content,\n            postId: postId\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.Btn,\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.Btn,\n          onClick: onDelete,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CommentContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CommentBox, {\n          children: [/*#__PURE__*/_jsxDEV(CommentInput, {\n            ref: textRef,\n            type: \"text\",\n            onKeyPress: e => {\n              if (e.key == \"Enter\") {\n                textRef.current.value = \"\";\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CommentBtn, {\n            onClick: replySubmit,\n            children: \"\\uC785\\uB825\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentsUl, {\n          children: comments === null || comments === void 0 ? void 0 : comments.map((reply, index) => {\n            var _reply$childReplyDtoL;\n\n            return /*#__PURE__*/_jsxDEV(CommentsLi, {\n              children: [/*#__PURE__*/_jsxDEV(OneComment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: reply.parentReplyDto.content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 272,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(ReplyBtn, {\n                    id: reply.parentReplyDto.replyId,\n                    onClick: e => createChildReply(reply.parentReplyDto.replyId),\n                    children: \"\\uB2F5\\uAE00\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 276,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(ReplyBtn, {\n                    onClick: () => deleteChildReply(reply.parentReplyDto.replyId),\n                    children: \"\\uC0AD\\uC81C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: (_reply$childReplyDtoL = reply.childReplyDtoList) === null || _reply$childReplyDtoL === void 0 ? void 0 : _reply$childReplyDtoL.map(child => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: child.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                onSubmit: childReplySubmit,\n                children: clickChildReplyIndex === reply.parentReplyDto.replyId && childReply ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    onChange: e => {\n                      setChildReplyType(e.target.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(ReplyBtn, {\n                    children: \" \\uB4F1\\uB85D\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 309,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true) : null\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)]\n            }, reply.parentReplyDto.replyId, true, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"NHgS6PSB2beNZMjZ7cdGXGmV2HA=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n\n_c8 = PostDetail;\nexport default PostDetail;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"CommentInput\");\n$RefreshReg$(_c2, \"CommentContainer\");\n$RefreshReg$(_c3, \"CommentBox\");\n$RefreshReg$(_c4, \"CommentBtn\");\n$RefreshReg$(_c5, \"CommentsUl\");\n$RefreshReg$(_c6, \"CommentsLi\");\n$RefreshReg$(_c7, \"OneComment\");\n$RefreshReg$(_c8, \"PostDetail\");","map":{"version":3,"sources":["/Users/yunsmac/Desktop/blog/src/component/PostDetail.js"],"names":["useParams","useLocation","axios","useState","useEffect","useRef","Header","styles","Link","useNavigate","Content","token","styled","CommentInput","input","CommentContainer","div","CommentBox","CommentBtn","button","CommentsUl","ul","CommentsLi","li","OneComment","PostDetail","props","postId","state","navigate","childReply","setChildReply","clickChildReplyIndex","setClickChildReply","console","log","ReplyBtn","getResponse","require","data","JSON","stringify","config","method","url","headers","Authorization","then","response","replyResponseList","result","setComments","setTitle","title","setContent","content","catch","error","onDelete","event","preventDefault","comments","textRef","replySubmit","text","current","value","parentReplyId","createChildReply","replyId","childReplyTyping","setChildReplyType","childReplySubmit","e","deleteChildReply","postContainer","postTitle","postContent","BtnContainer","Btn","key","map","reply","index","parentReplyDto","childReplyDtoList","child","target"],"mappings":"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","sourcesContent":["import { useParams, useLocation } from \"react-router\";\n\nimport axios from \"axios\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Header from \"./header/Header\";\nimport styles from \"./PostDetail.module.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Content from \"./content/Content\";\nimport { token } from \"./Api\";\nimport styled from \"styled-components\";\n\nconst CommentInput = styled.input`\n  width: 80%;\n  height: 50px;\n`;\n\nconst CommentContainer = styled.div`\n  height: 800px;\n  background-color: antiquewhite;\n  padding: 50px;\n`;\n\nconst CommentBox = styled.div`\n  display: flex;\n`;\n\nconst CommentBtn = styled.button`\n  width: 50px;\n  height: 40px;\n  margin-left: 40px;\n`;\n\nconst CommentsUl = styled.ul`\n  margin: 30px 0px;\n`;\n\nconst CommentsLi = styled.li`\n  width: 100%;\n  padding: 20px;\n  list-style: none;\n  border-bottom: 1px solid gray;\n`;\n\nconst OneComment = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n`;\n\nfunction PostDetail(props) {\n  const { postId } = useParams();\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const [childReply, setChildReply] = useState(false);\n\n  const [clickChildReplyIndex, setClickChildReply] = useState();\n\n  console.log(\"postId:\", postId);\n\n  //const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxIiwiaXNzIjoiYmxvZyBwcm9qZWN0IiwiaWF0IjoxNjQ0MDQyNDcwLCJleHAiOjE2NTI2ODI0NzB9.NCoq6o8qLnWoBqw6ob3gOhVDR87ZGgruPiGeWEhyfOugC3ZNjCFFcF-Dn7xUInFYfNv8XY-yKznCQWqj8qX1rw\";\n\n  const ReplyBtn = styled.button`\n    width: 70px;\n    height: 50px;\n  `;\n\n  const getResponse = () => {\n    var axios = require(\"axios\");\n    var data = JSON.stringify({});\n\n    var config = {\n      method: \"get\",\n      url: `http://localhost:8080/api/posts/${postId}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(\"getResponse에서 받아옴:\", response.data.replyResponseList); // 이게 comments임\n        let result = response.data.replyResponseList;\n        setComments(result);\n\n        setTitle(response.data.title);\n        setContent(response.data.content);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const onDelete = (event) => {\n    event.preventDefault();\n\n    //원래 페이지로 돌아가기 */\n\n    var axios = require(\"axios\");\n    var data = JSON.stringify(\"string\");\n\n    var config = {\n      method: \"delete\",\n      url: `http://localhost:8080/api/posts/${postId}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n        navigate(\"/\");\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [comments, setComments] = useState([]);\n\n  const textRef = useRef();\n\n  useEffect(() => {\n    getResponse();\n  }, []);\n\n  const replySubmit = () => {\n    let text = textRef.current.value;\n    textRef.current.value = \"\";\n\n    var axios = require(\"axios\");\n    var data = JSON.stringify({\n      content: text,\n      parentReplyId: 0,\n      postId: postId,\n    });\n\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:8080/api/reply\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(response.data.replyResponseList);\n        setComments(response.data.replyResponseList);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const createChildReply = (replyId) => {\n    setChildReply((current) => !current);\n    setClickChildReply(replyId);\n    //getResponse();\n    console.log(\"클릭한 +버튼\", replyId);\n  };\n\n  const [childReplyTyping, setChildReplyType] = useState();\n\n  /* const postChildReply = (e) => {\n    setChildReplyType(e.target.value);\n  }; */\n\n  const childReplySubmit = (e) => {\n    // 자식 댓글 달기\n    e.preventDefault();\n    console.log(\"자식 댓글 담\");\n    var axios = require(\"axios\");\n    var data = JSON.stringify({\n      content: childReplyTyping,\n      parentReplyId: clickChildReplyIndex,\n      postId: postId,\n    });\n\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:8080/api/reply\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        setComments(response.data.replyResponseList);\n        getResponse();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const deleteChildReply = (replyId) => {\n    console.log(\"삭제 버튼\", replyId);\n    var axios = require(\"axios\");\n    var data = JSON.stringify({});\n\n    var config = {\n      method: \"delete\",\n      url: `http://localhost:8080/api/reply/${replyId}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        getResponse();\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  return (\n    <div>\n      <div>\n        <Header></Header>\n      </div>\n      <div className={styles.postContainer}>\n        <div className={styles.postTitle}>{title}</div>\n        <div className={styles.postContent}>{content}</div>\n\n        <div className={styles.BtnContainer}>\n          <Link\n            to={\"/modify\"}\n            state={{\n              title: title,\n              content: content,\n              postId: postId,\n            }}\n          >\n            <button className={styles.Btn}>수정</button>\n          </Link>\n          <button className={styles.Btn} onClick={onDelete}>\n            삭제\n          </button>\n        </div>\n        <CommentContainer>\n          <CommentBox>\n            <CommentInput\n              ref={textRef}\n              type=\"text\"\n              onKeyPress={(e) => {\n                if (e.key == \"Enter\") {\n                  textRef.current.value = \"\";\n                }\n              }}\n            />\n            <CommentBtn onClick={replySubmit}>입력</CommentBtn>\n          </CommentBox>\n\n          <CommentsUl>\n            {comments?.map((reply, index) => (\n              <CommentsLi key={reply.parentReplyDto.replyId}>\n                <OneComment>\n                  <div>\n                    <span>{reply.parentReplyDto.content}</span>\n                  </div>\n                  <div>\n                    <ReplyBtn\n                      id={reply.parentReplyDto.replyId}\n                      onClick={(e) =>\n                        createChildReply(reply.parentReplyDto.replyId)\n                      }\n                    >\n                      답글\n                    </ReplyBtn>\n                    <ReplyBtn\n                      onClick={() =>\n                        deleteChildReply(reply.parentReplyDto.replyId)\n                      }\n                    >\n                      삭제\n                    </ReplyBtn>\n                  </div>\n                </OneComment>\n                <ul>\n                  {reply.childReplyDtoList?.map((child) => (\n                    <li>{child.content}</li>\n                  ))}\n                </ul>\n\n                <form onSubmit={childReplySubmit}>\n                  {clickChildReplyIndex === reply.parentReplyDto.replyId &&\n                  childReply ? (\n                    <>\n                      <input\n                        type=\"text\"\n                        onChange={(e) => {\n                          setChildReplyType(e.target.value);\n                        }}\n                      />\n                      <ReplyBtn> 등록</ReplyBtn>\n                    </>\n                  ) : null}\n                </form>\n              </CommentsLi>\n            ))}\n          </CommentsUl>\n        </CommentContainer>\n      </div>\n    </div>\n  );\n}\n\nexport default PostDetail;\n"]},"metadata":{},"sourceType":"module"}