{"ast":null,"code":"var _jsxFileName = \"/Users/yunsmac/Desktop/blog/src/component/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, useLocation } from \"react-router\";\nimport axios from \"axios\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Header from \"./header/Header\";\nimport styles from \"./PostDetail.module.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Content from \"./content/Content\";\nimport { token } from \"./Api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PostDetail(props) {\n  _s();\n\n  const {\n    postId\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const navigate = useNavigate();\n  const [childReply, setChildReply] = useState(false);\n  const [clickChildReplyIndex, setClickChildReply] = useState();\n  console.log(\"postId:\", postId); //const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxIiwiaXNzIjoiYmxvZyBwcm9qZWN0IiwiaWF0IjoxNjQ0MDQyNDcwLCJleHAiOjE2NTI2ODI0NzB9.NCoq6o8qLnWoBqw6ob3gOhVDR87ZGgruPiGeWEhyfOugC3ZNjCFFcF-Dn7xUInFYfNv8XY-yKznCQWqj8qX1rw\";\n\n  const onDelete = event => {\n    event.preventDefault(); //원래 페이지로 돌아가기 */\n\n    var axios = require(\"axios\");\n\n    var data = JSON.stringify(\"string\");\n    var config = {\n      method: \"delete\",\n      url: `http://localhost:8080/api/posts/${postId}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      console.log(JSON.stringify(response.data));\n      navigate(\"/\");\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [comments, setComments] = useState([]);\n  const textRef = useRef();\n  useEffect(() => {\n    var axios = require(\"axios\");\n\n    var data = JSON.stringify({});\n    var config = {\n      method: \"get\",\n      url: `http://localhost:8080/api/posts/${postId}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      console.log(JSON.stringify(response.data));\n      let result = response.data.replyDtoList;\n      setCommentFunc(result);\n      setTitle(response.data.title);\n      setContent(response.data.content);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n\n  const setCommentFunc = array => {\n    setComments(array);\n  };\n\n  const replySubmit = () => {\n    let text = textRef.current.value;\n    textRef.current.value = \"\";\n\n    var axios = require(\"axios\");\n\n    var data = JSON.stringify({\n      content: text,\n      parentReplyId: 0,\n      postId: postId\n    });\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:8080/api/reply\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      console.log(JSON.stringify(response.data));\n      setCommentFunc(response.data.replyDtoList);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const createChildReply = replyId => {\n    setChildReply(current => !current);\n    setClickChildReply(replyId);\n    /*  comments.map((order) => {\n      if (order.replyId === replyId) {\n        setChildReply((current) => !current);\n        setClickChildReply(replyId);\n      }\n    }); */\n  };\n\n  const [childReplyTyping, setChildReplyType] = useState();\n  /* const postChildReply = (e) => {\n    setChildReplyType(e.target.value);\n  }; */\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    var axios = require(\"axios\");\n\n    var data = JSON.stringify({\n      content: childReplyTyping,\n      parentReplyId: clickChildReplyIndex,\n      postId: postId\n    });\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:8080/api/reply\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token\n      },\n      data: data\n    };\n    axios(config).then(function (response) {\n      console.log(JSON.stringify(response.data));\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const deleteReply = replyId => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.postContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postTitle,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.postContent,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ref: textRef,\n          type: \"text\",\n          onKeyPress: e => {\n            if (e.key == \"Enter\") {\n              textRef.current.value = \"\";\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: replySubmit,\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.BtnContainer,\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/modify\",\n          state: {\n            title: title,\n            content: content,\n            postId: postId\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.Btn,\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.Btn,\n          onClick: onDelete,\n          children: \"\\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.commentBox,\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          children: comments.map((reply, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [reply.content, /*#__PURE__*/_jsxDEV(\"button\", {\n              id: reply.replyId,\n              onClick: e => createChildReply(reply.replyId),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: deleteReply(reply.replyId),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmit,\n              children: [clickChildReplyIndex == index + 1 && childReply ? /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: e => {\n                  setChildReplyType(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 21\n              }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n                children: \"\\uB313\\uAE00 \\uB4F1\\uB85D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, reply.replyId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: clickChildReplyIndex\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PostDetail, \"NHgS6PSB2beNZMjZ7cdGXGmV2HA=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/yunsmac/Desktop/blog/src/component/PostDetail.js"],"names":["useParams","useLocation","axios","useState","useEffect","useRef","Header","styles","Link","useNavigate","Content","token","PostDetail","props","postId","state","navigate","childReply","setChildReply","clickChildReplyIndex","setClickChildReply","console","log","onDelete","event","preventDefault","require","data","JSON","stringify","config","method","url","headers","Authorization","then","response","catch","error","title","setTitle","content","setContent","comments","setComments","textRef","result","replyDtoList","setCommentFunc","array","replySubmit","text","current","value","parentReplyId","createChildReply","replyId","childReplyTyping","setChildReplyType","onSubmit","e","deleteReply","postContainer","postTitle","postContent","key","BtnContainer","Btn","commentBox","map","reply","index","target"],"mappings":"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","sourcesContent":["import { useParams, useLocation } from \"react-router\";\n\nimport axios from \"axios\";\nimport { useState, useEffect, useRef } from \"react\";\nimport Header from \"./header/Header\";\nimport styles from \"./PostDetail.module.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Content from \"./content/Content\";\nimport { token } from \"./Api\";\n\n\nfunction PostDetail(props) {\n  const { postId } = useParams();\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const [childReply, setChildReply] = useState(false);\n\n  const [clickChildReplyIndex, setClickChildReply] = useState();\n\n  console.log(\"postId:\", postId);\n\n  //const token = \"eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxIiwiaXNzIjoiYmxvZyBwcm9qZWN0IiwiaWF0IjoxNjQ0MDQyNDcwLCJleHAiOjE2NTI2ODI0NzB9.NCoq6o8qLnWoBqw6ob3gOhVDR87ZGgruPiGeWEhyfOugC3ZNjCFFcF-Dn7xUInFYfNv8XY-yKznCQWqj8qX1rw\";\n\n  const onDelete = (event) => {\n    event.preventDefault();\n\n    //원래 페이지로 돌아가기 */\n\n    var axios = require(\"axios\");\n    var data = JSON.stringify(\"string\");\n\n    var config = {\n      method: \"delete\",\n      url: `http://localhost:8080/api/posts/${postId}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n        navigate(\"/\");\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [comments, setComments] = useState([]);\n\n  const textRef = useRef();\n\n  useEffect(() => {\n    var axios = require(\"axios\");\n    var data = JSON.stringify({});\n\n    var config = {\n      method: \"get\",\n      url: `http://localhost:8080/api/posts/${postId}`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n        let result = response.data.replyDtoList;\n        setCommentFunc(result);\n\n        setTitle(response.data.title);\n        setContent(response.data.content);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  }, []);\n\n  const setCommentFunc = (array) => {\n    setComments(array);\n  };\n  const replySubmit = () => {\n    let text = textRef.current.value;\n    textRef.current.value = \"\";\n\n    var axios = require(\"axios\");\n    var data = JSON.stringify({\n      content: text,\n      parentReplyId: 0,\n      postId: postId,\n    });\n\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:8080/api/reply\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n\n        setCommentFunc(response.data.replyDtoList);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n  const createChildReply = (replyId) => {\n    setChildReply((current) => !current);\n    setClickChildReply(replyId);\n\n    /*  comments.map((order) => {\n      if (order.replyId === replyId) {\n        setChildReply((current) => !current);\n        setClickChildReply(replyId);\n      }\n    }); */\n  };\n\n  const [childReplyTyping, setChildReplyType] = useState();\n\n  /* const postChildReply = (e) => {\n    setChildReplyType(e.target.value);\n  }; */\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    var axios = require(\"axios\");\n    var data = JSON.stringify({\n      content: childReplyTyping,\n      parentReplyId: clickChildReplyIndex,\n      postId: postId,\n    });\n\n    var config = {\n      method: \"post\",\n      url: \"http://localhost:8080/api/reply\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n      data: data,\n    };\n\n    axios(config)\n      .then(function (response) {\n        console.log(JSON.stringify(response.data));\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n  const deleteReply = (replyId) =>{\n\n  }\n\n  return (\n    <div>\n      <div>\n        <Header></Header>\n      </div>\n      <div className={styles.postContainer}>\n        <div className={styles.postTitle}>{title}</div>\n        <div className={styles.postContent}>{content}</div>\n        <div>\n\n        <input\n            ref={textRef}\n            type=\"text\"\n            onKeyPress={(e) => {\n              if (e.key == \"Enter\") {\n                textRef.current.value = \"\";\n              }\n            }}\n          />\n          <button onClick={replySubmit}>submit</button>\n        </div>\n\n        <div className={styles.BtnContainer}>\n          <Link\n            to={\"/modify\"}\n            state={{\n              title: title,\n              content: content,\n              postId: postId,\n            }}\n          >\n            <button className={styles.Btn}>수정</button>\n          </Link>\n          <button className={styles.Btn} onClick={onDelete}>\n            삭제\n          </button>\n        </div>\n        <div className={styles.commentBox}>\n          <ul>\n            {comments.map((reply, index) => (\n              <li key={reply.replyId}>\n                {reply.content}\n                <button\n                  id={reply.replyId}\n                  onClick={(e) => createChildReply(reply.replyId)}\n                >\n                  +\n                </button>\n                <button onClick={deleteReply(reply.replyId)}>\n                  -\n                </button>\n                <form onSubmit={onSubmit}>\n                  {clickChildReplyIndex == index + 1 && childReply ? (\n                    <input\n                      type=\"text\"\n                      onChange={(e) => {\n                        setChildReplyType(e.target.value);\n                      }}\n                    />\n                  ) : null}\n                  <button>댓글 등록</button>\n                </form>\n              </li>\n            ))}\n          </ul>\n          <span>{clickChildReplyIndex}</span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default PostDetail;\n"]},"metadata":{},"sourceType":"module"}